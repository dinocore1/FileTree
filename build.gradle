apply plugin: 'cpp'

model {

    buildTypes {
        debug
        release
    }

    binaries {
        all {
            if (toolChain in Gcc) {
                cppCompiler.args '-std=c++14'
                if(buildType == buildTypes.debug) {
                    cppCompiler.args '-g'
                }
            }

            if (toolChain in VisualCpp && buildType == buildTypes.debug) {
                cppCompiler.args '/Zi'
                cppCompiler.define 'DEBUG'
                linker.args '/DEBUG'
            }
        }
    }

    repositories {
        libs(PrebuiltLibraries) {
            fuse {
                binaries.withType(SharedLibraryBinary) {
                    sharedLibraryFile = file("/lib/x86_64-linux-gnu/libfuse.so")
                }
            }
        }
    }
    components {
        fs(NativeLibrarySpec)

        main(NativeExecutableSpec) {
            binaries.all {
                cppCompiler.define "_FILE_OFFSET_BITS=64"
            }
            sources {
                cpp {
                    preCompiledHeader 'pch.h'
                    lib library: 'fuse', linkage: 'shared'
                }
                
            }
        }
    }
}